{"version":3,"sources":["LineChart.module.css","utils.js","Node.js","constants.js","Graph.js","LineChart.js","SimulationSettings.js","simulation/markov.js","simulation/grid.js","simulation/index.js","App.js","serviceWorker.js","index.js","App.module.css","Graph.module.css","SimulationSettings.module.css"],"names":["module","exports","randomSample","array","size","r","temp","length","i","end","swaps","Math","floor","random","push","sample","slice","pop","shuffle","temporaryValue","randomIndex","currentIndex","weightedRandom","spec","sum","prob","value","padding","max","padded","min","distance","source","target","sqrt","pow","x","y","noop","ICONS","flag","Node","layout","node","width","height","type","venue","onNodeClick","position","id","transform","classes","classNames","styles","susceptible","state","sick","recovered","dead","locked","key","className","onClick","fontSize","stroke","fill","strokeWidth","Graph","props","handleTick","bind","setCurrent","current","nodes","reduce","prev","acc","this","runForceSimulation","simulation","on","nextProps","tick","updateForceSimulation","alpha","restart","force","links","edges","forceSimulation","forceLink","forceCollide","iterations","radius","updates","map","setState","nodeId","ref","svgRef","style","shapeRendering","index","Component","defaultProps","buildPolyLineString","points","xMultipier","yMultipier","maxXEntries","concat","join","LineChart","xOffset","yOffset","data","maxYPoint","maxYRange","scaleY","labelY","lineChart","color","labelX","SimulationSettings","simulationState","onSettingChange","onRestartButtonClick","container","form","onChange","initialSickAgents","agentsPerHouse","closedBorders","maskWearPercentage","footer","BASE","SIR_TRANSITION_STATE","DISEASE_SPREAD_TRANSITION","getNextMarkovStateForAgent","agent","transitionMap","location","split","agentLocation","applyFixedNodeGrid","nodesToAlign","filter","count","fetch","then","response","json","console","log","JSON","stringify","features","properties","region_un","admin","fx","geometry","coordinates","fy","iso_a2","VENUES","name","members","isRoot","houses","REGULAR_VENUE_TRANSITIONS","HALF_ASSED_VENUE_TRANSITIONS","CLOSED_BORDER_VENUE_TRANSITIONS","VENUE_TRANSITIONS","getInitialGraph","forEach","alignment","nodeIndex","venueId","j","agentId","base","sickAgents","nextSimulationTick","find","targets","nextMarkovState","moveAgent","fellow","sick_prob","MASK_MODIFIED_TRANSITION","applySIRModel","targetNode","sourceNode","edge","INITIAL_SIMULATION_STATE","INITIAL_GRAPH","App","useState","setSimulationState","setNodes","setEdges","historicalSickCount","setHistoricalSickCount","historicalRecoveredCount","setHistoricalRecoveredCount","historicalDeadCount","setHistoricalDeadCount","loading","setLoading","graphRef","useRef","callback","delay","savedCallback","useEffect","setInterval","clearInterval","useInterval","header","samples","sampleSusceptible","sampleInfected","sampleRecovered","sampleDead","round","section","stats","population","deceased","simulationSettings","simulationInfo","event","pageInfo","display","textAlign","data-ad-layout","data-ad-format","data-ad-client","data-ad-slot","href","marginBottom","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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AAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,IAGlCoC,EAA+B,CACnC,MAAS,CAACpC,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EAAMA,EAClDA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,EACpCA,EAAMA,EAAMA,EAAM,KAAMA,EAAMA,EAAMA,IAGlCqC,EAAkC,CACtC,MAAS,CAACrC,IAGRsC,EAAoBH,EAExB,SAASI,GAAgBlD,GACvB,IAAMnD,EAAQ,GACRe,EAAQ,GAGZqF,EADmC,GAAjCjD,EAAgBQ,cACEsC,EACsB,GAAjC9C,EAAgBQ,cACLuC,EAGAC,EAGtBP,EAAOU,SAAQ,YAOb,IADK,IALLT,EAKI,EALJA,KACAC,EAII,EAJJA,QAEApB,GAEI,EAHJqB,OAGI,EAFJrB,OAGS5I,GADL,EADJyK,UAEa,GAAGC,EAAY,EAAG1K,EAAI4I,EAAMvB,GAAkBrH,IAAK0K,IAAa,CAC3E,IAAMC,EAAO,UAAMZ,EAAN,YAAc/J,GAS3B,GAPAkE,EAAM5D,KAAK,CACTgC,KAAM,QACNC,MAAOwH,EACPrH,GAAIiI,EACJ/K,KAAM,IAGHoK,EAIL,IAAK,IAAIY,EAAI,EAAGA,EAAIZ,EAAQ3C,GAAkBuD,IAAKF,IAAa,CAC9D,IAAMG,EAAO,UAAMd,EAAN,YAAc/J,EAAd,YAAmB4K,GAChC1G,EAAM5D,KAAK,CACTgC,KAAM,QACNgG,SAAUqC,EACVG,KAAMH,EACNjI,GAAImI,EACJjL,KAAM,EACNoD,MN7HU,IM+HZiC,EAAM3E,KAAK,CACT,OAAUuK,EACV,OAAUF,SAMlB,IApDwC,EAoDlCI,EAAarL,EACjBwE,EAAMyE,QAAO,kBAAuB,UAAvB,EAAGrG,QAChB+E,EAAgBM,mBAtDsB,cAyDpBoD,GAzDoB,IAyDxC,2BAAgC,SACxB/H,MN5IG,GMkF6B,8BA6DxC,MAAQ,CACNkB,MAAOuE,EAAmBvE,GAC1Be,SAIJ,SAAS+F,GAAmBhI,EAAOkB,EAAOe,GACtB6E,EAAOmB,MAAK,qBAAGhB,UA0CjC,OAxCA/F,EACGyE,QACC,kBN7JQ,UM6JR,EAAGrG,QAEJkI,SACC,SAACpC,EAAOpI,GAEN,IAwDiBwB,EAAQ0J,EAxDnBC,EAAkBhD,EAA2BC,EAAOkC,GAF9C,EAGYlC,EAAME,SAASC,MAAM,KAHjC,sBAMQ4C,GACjBA,IAAoBnD,GAAQI,EAAME,WAAaF,EAAM0C,MFlK5C,SEmKVK,GNnKG,IMsKM/C,EAAMpF,OAGfoI,GACElH,EACAe,EACAmD,EAJO+C,IAAoBnD,EAK3B9D,EAAM+G,MAAK,qBAAGvI,KAAgB0F,EAAM0C,SAwCvBtJ,EAjCG4G,GAiCK8C,EAjCEhH,EAAMyE,QAAO,qBAAGpG,QAAsB4I,MAmCrDD,EAAQ/G,QACtB,SAACC,EAAMH,GAAP,OAAmB1C,EAASC,EAAQyC,GAAW1C,EAASC,EAAQ4C,GAAQH,EAAUG,KAI7E5C,OA9BF,CACL0C,MAHFA,EF1IK,SAAuBlB,EAAOkB,EAAOe,GAAQ,IAAD,gBAC9Bf,GAD8B,yBACtC/B,EADsC,QAE/C,GAAkB,UAAdA,EAAKG,KACP,iBAGF,IAAMgG,EAAWpE,EAAM+G,MAAK,gBAAGvI,EAAH,EAAGA,GAAH,OAAYP,EAAKmG,WAAa5F,KAC1CuC,EACb0D,QAAO,qBAAGlH,OAAoBiB,KAAO4F,EAAS5F,MAC9C8C,KAAI,qBAAGhE,UAEFgJ,SACN,SAACa,GACC,GAAIA,EAAO3I,KAAOP,EAAKO,GAAvB,CAIA,GJrEK,IIqEDP,EAAKa,MAIP,GAAIA,EAAM8E,mBAAqB,GAAuD,KAAlDI,EAA0BmD,EAAOrI,OAAO,GAAG,GAAY,CAAC,IAAD,EAErFsI,EAAY,IAAO,EAAItI,EAAM8E,mBAAmB,KAChDyD,GAAwB,mBJ7EpB,EI8ES,CACb,CAACD,EJ9EJ,GI+EG,CAAC,EAAIA,EJhFD,KI6EoB,cJ3EtB,EIgFS,CACX,CAAC,EJjFC,KI2EsB,cJ5E3B,EIoFS,CACN,CAAC,EJrFJ,KI4E2B,cJ1E3B,EIqFS,CACN,CAAC,EJtFJ,KI0E2B,GAe5BrC,QAAQC,IAAI,oBACZmC,EAAOrI,MAAQlC,EAAeyK,EAAyBF,EAAOrI,aAE9DqI,EAAOrI,MAAQlC,EAAeoH,EAA0BmD,EAAOrI,QAInEqI,EAAOrI,MAAQlC,EAAemH,EAAqBoD,EAAOrI,aA7ChE,2BAA0B,IADuB,+BE0IzCwI,CAAcxI,EAAOkB,EAAOe,GAIlCA,MAAOA,EACPjC,MAAM,eAAMA,EAAP,CAAc2B,KAAM3B,EAAM2B,KAAO,KAI1C,SAASyG,GAAUlH,EAAOe,EAAOmD,EAAOqD,GACtC,IAAMC,EAAaxH,EAAM+G,MAAK,qBAAGvI,KAAgB0F,EAAME,YAEvD,IAAImD,EAAWrI,SAAUsI,EAAWtI,OAApC,CAIiB6B,EAAMO,KAAI,SAACmG,GACtBA,EAAKnK,OAAOkB,KAAO0F,EAAM1F,KAC3BiJ,EAAKlK,OAASgK,MAIlBrD,EAAME,SAAWmD,EAAW/I,IC9M9B,IAAMkJ,GAA2B,CAC/BjH,KAAM,EACNiD,eAAgB,EAChBsC,OAAQ,GACRvC,kBAAmB,EACnBE,cAAe,EACfC,mBAAoB,GAIhB+D,GAAgBtB,GAAgBqB,IA2MvBE,OAzMf,WAAgB,IAAD,EACiCC,mBAC5CH,IAFW,mBACNvE,EADM,KACW2E,EADX,OAIaD,mBAASF,GAAc3H,OAJpC,mBAINA,EAJM,KAIC+H,EAJD,OAKaF,mBAASF,GAAc5G,OALpC,mBAKNA,EALM,KAKCiH,EALD,OAMyCH,mBAAS,IANlD,mBAMNI,EANM,KAMeC,EANf,OAOmDL,mBAAS,IAP5D,mBAONM,EAPM,KAOoBC,EAPpB,OAQyCP,mBAAS,IARlD,mBAQNQ,EARM,KAQeC,EARf,OASiBT,oBAAS,GAT1B,mBASNU,EATM,KASGC,EATH,KAWPC,EAAWC,iBAAO,MAkExB,OT5FK,SAAqBC,EAAUC,GAGpC,IAAMC,EAAgBH,mBAGtBI,qBAAU,WACRD,EAAc9I,QAAU4I,IACvB,CAACA,IAGJG,qBAAU,WAIR,GAAc,OAAVF,EAAgB,CAClB,IAAIpK,EAAKuK,aAJX,WACEF,EAAc9I,YAGa6I,GAC3B,OAAO,kBAAMI,cAAcxK,OAE5B,CAACoK,ISSJK,EAAY,WACV,IAAIV,EAAJ,CADgB,MAKgCzB,GAC9C3D,EACAnD,EACAe,GAHoCjC,GALtB,EAKRkB,MALQ,EAKOe,MALP,EAKsBjC,OAMtCgJ,EAAmBhJ,GAGnBoJ,EACED,EAAoB5F,OAClBrC,EAAMyE,QAAO,mBP/CR,IO+CQ,EAAG3F,SAA4BjD,SAIhDuM,EACED,EAAyB9F,OACvBrC,EAAMyE,QAAO,mBPpDH,IOoDG,EAAG3F,SAAiCjD,SAIrDyM,EACED,EAAoBhG,OAClBrC,EAAMyE,QAAO,mBPzDR,IOyDQ,EAAG3F,SAA4BjD,YAG/C,KAEHiN,qBAAU,WACRN,GAAW,KACV,CAACD,IA8BF,yBAAKnJ,UAAWR,IAAO0E,WACrB,yBAAKlE,UAAWR,IAAOsK,QACrB,kEACA,yFAEF,yBAAK9J,UAAWR,IAAO0B,YACrB,yBAAKlB,UAAWR,IAAOuK,SACrB,0BAAM/J,UAAWR,IAAOwK,mBAAxB,eACA,0BAAMhK,UAAWR,IAAOyK,gBAAxB,YACA,0BAAMjK,UAAWR,IAAO0K,iBAAxB,aACA,0BAAMlK,UAAWR,IAAO2K,YAAxB,YACA,gFAEAhB,GACA,kBAAC,EAAD,CACErK,MAGM,IAFJjC,KAAKuN,MACHxJ,EAAMyE,QAAO,kBAAuB,UAAvB,EAAGrG,QAA6BvC,OAAS,GAG1DsC,OAAQ,IACRsC,KAAM0C,EAAgB1C,KACtBT,MAAOA,EACPe,MAAOA,EACPzC,YAlDU,SAACkD,GACnB,OAAO,WACL,IAAMvD,EAAO+B,EAAM+G,MAAK,gBAAGvI,EAAH,EAAGA,GAAH,OAAYgD,IAAWhD,KAC7B,UAAdP,EAAKG,OAGTH,EAAKiB,QAAUjB,EAAKiB,UA6CduC,IAAKgH,KAIX,yBAAKrJ,UAAWR,IAAO6K,SACrB,yBAAKrK,UAAWR,IAAO8K,OACrB,qCACA,yBAAKtK,UAAWR,IAAO+K,YAAvB,eACe3J,EAAMyE,QAAO,kBAAuB,UAAvB,EAAGrG,QAA6BvC,OAAQ,IAClE,6BACA,0BAAMuD,UAAWR,IAAOgL,UAAxB,QAHF,KAGkD5J,EAAMyE,QAAO,mBPjI5D,IOiI4D,EAAG3F,SAA4BjD,OAH9F,IAGsG,6BAEpG,0BAAMuD,UAAWR,IAAOI,WAAxB,aALF,KAMIgB,EAAMyE,QAAO,mBPrIT,IOqIS,EAAG3F,SAAiCjD,OACjD,IACF,6BACA,0BAAMuD,UAAWR,IAAOG,MAAxB,QATF,KAS8CiB,EAAMyE,QAAO,mBPzIxD,IOyIwD,EAAG3F,SAA4BjD,OAT1F,IASkG,8BAElG,kBAAC0G,EAAD,CACErE,MAAO,IACPC,OAAQ,IACRuE,KAAM,CACJ,CAAEM,MAAO,MAAOf,OAAQgG,GACxB,CAAEjF,MAAO,QAASf,OAAQkG,GAC1B,CAAEnF,MAAO,QAASf,OAAQoG,OAIhC,yBAAKjJ,UAAWR,IAAOiL,oBACrB,wCACA,yBAAKzK,UAAWR,IAAOkL,gBAAvB,yDAGA,kBAAC5G,EAAD,CACEC,gBAAiBA,EACjBC,gBA5Ec,SAACjE,GAAD,OAAS,SAAC4K,GAChCjC,EAAmB,eAAK3E,EAAN,eAAwBhE,EAAM4K,EAAMxM,OAAOP,WA4ErDqG,qBAzEmB,WAAO,IAAD,EACRgD,GAAgBlD,GAAjCnD,EADyB,EACzBA,MAAOe,EADkB,EAClBA,MACfyH,GAAW,GACXT,EAAS/H,GACTgI,EAASjH,GACTuH,EAAuB,IACvBF,EAA4B,IAC5BF,EAAuB,IACvBJ,EAAmB,eAAK3E,EAAN,CAAuB1C,KAAM,UAsE7C,yBAAKrB,UAAWR,IAAOoL,UACvB,yBACI5K,UAAU,cACVuC,MAAO,CAAEsI,QAAS,QAASC,UAAW,UACtCC,iBAAe,aACfC,iBAAe,QACfC,iBAAe,0BACfC,eAAa,eAEf,yBAAKlL,UAAWR,IAAO6K,SACrB,6CACA,0aAGA,uEAC2C,uBAAGc,KAAK,0BAAR,aAD3C,6CACmI,uBAAGA,KAAK,kGAAR,8DADnI,KAGA,iDACA,mTAGA,yVAGA,6PAGA,8IAGA,kFACsD,uBAAGA,KAAK,8CAAR,gBADtD,kHAGA,6SAGA,8DACA,2GAEU,uBAAGA,KAAK,mDAAR,UAFV,mEAKA,wCACY,6BACV,uBAAGA,KAAK,8BAAR,gBAAqD,6BACrD,uBAAGA,KAAK,kCAAR,eAAwD,6BACxD,uBAAGA,KAAK,gCAAR,oBAEF,uBAAG5I,MAAO,CAAE6I,aAAc,QAA1B,cACa,6BAAO,SC3MVC,QACW,cAA7BC,OAAOtG,SAASuG,UAEe,UAA7BD,OAAOtG,SAASuG,UAEhBD,OAAOtG,SAASuG,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxG,MAAK,SAAAyG,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzG,QAAQyG,MAAMA,EAAMC,a,kBExI5BnQ,EAAOC,QAAU,CAAC,UAAY,uBAAuB,OAAS,oBAAoB,oBAAsB,iCAAiC,WAAa,wBAAwB,QAAU,qBAAqB,UAAY,uBAAuB,KAAO,kBAAkB,SAAW,sBAAsB,mBAAqB,gCAAgC,MAAQ,mBAAmB,WAAa,wBAAwB,eAAiB,4BAA4B,SAAW,sBAAsB,QAAU,qBAAqB,kBAAoB,+BAA+B,eAAiB,4BAA4B,gBAAkB,6BAA6B,WAAa,0B,kBCAxqBD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,SAAW,wBAAwB,MAAQ,qBAAqB,QAAU,uBAAuB,YAAc,2BAA2B,YAAc,2BAA2B,KAAO,oBAAoB,KAAO,oBAAoB,UAAY,yBAAyB,aAAe,8B,kBCAvWD,EAAOC,QAAU,CAAC,UAAY,sCAAsC,KAAO,iCAAiC,MAAQ,kCAAkC,KAAO,iCAAiC,OAAS,sC","file":"static/js/main.092dcdff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineChart\":\"LineChart_lineChart__1YIFO\",\"labelY\":\"LineChart_labelY__3CF0E\",\"labelX\":\"LineChart_labelX__L30Wm\"};","import { COLORS as colors } from './constants';\nimport React, { useState, useEffect, useRef } from 'react';\n\nimport {\n  SUSCEPTIBLE, SICK, RECOVERED, DEAD,\n} from './constants';\n\nexport function useInterval(callback, delay) {\n  // https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n  // danke, dan\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nfunction getRandom(length) { return Math.floor(Math.random() * length); }\n\nexport function randomSample(array, size) {\n  // https://stackoverflow.com/a/37835673\n  var r, i = array.length, end = i - size, temp, swaps = randomSample.swaps;\n\n  while (i-- > end) {\n      r = getRandom(i + 1);\n      temp = array[r];\n      array[r] = array[i];\n      array[i] = temp;\n      swaps.push(i);\n      swaps.push(r);\n  }\n\n  var sample = array.slice(end);\n\n  while(size--) {\n      i = swaps.pop();\n      r = swaps.pop();\n      temp = array[i];\n      array[i] = array[r];\n      array[r] = temp;\n  }\n\n  return sample;\n}\nrandomSample.swaps = [];\n\nexport function randomChoice(array) {\n  return array[Math.floor(Math.random() * array.length)]\n}\n\nexport function shuffle(array) {\n  // https://stackoverflow.com/a/2450976\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport function weightedRandom(spec) {\n  const random = Math.random();\n  let sum = .0; \n\n  for (var i in spec) {\n    const [prob, value] = spec[i];\n    sum += prob;\n    if (random <= sum) {\n      return value;\n    };\n  }\n};\n\nexport function rangeBetween(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport function shade(value) {\n  let sum = 0;\n\n  for (var i in colors) {\n    const color = colors[i];\n    if (value <= sum) {\n      return color;\n    };\n\n    sum += 1 / colors.length;\n  }\n\n  return colors[colors.length - 1];\n}\n\nexport function padding(value, max, padded) {\n  return Math.min(Math.max(padded, value), max - 50);\n}\n\nexport function distance(source, target) {\n    return Math.sqrt(Math.pow(target.x - source.x, 2) + Math.pow(target.y - source.y, 2))\n}\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n\nimport styles from \"./Graph.module.css\";\nimport { padding, shade } from \"./utils\";\nimport { VENUE, SUSCEPTIBLE, SICK, RECOVERED, DEAD } from \"./constants\";\n\nimport flag from 'country-code-emoji';\n\nfunction noop() {}\n\nconst ICONS = {\n  \"AL\": flag(\"AL\"),\n  \"AX\": flag(\"AX\"),\n  \"AD\": flag(\"AD\"),\n  \"AT\": flag(\"AT\"),\n  \"BE\": flag(\"BE\"),\n  \"BG\": flag(\"BG\"),\n  \"BA\": flag(\"BA\"),\n  \"BY\": flag(\"BY\"),\n  \"CH\": flag(\"CH\"),\n  \"CZ\": flag(\"CZ\"),\n  \"DE\": flag(\"DE\"),\n  \"DK\": flag(\"DK\"),\n  \"ES\": flag(\"ES\"),\n  \"EE\": flag(\"EE\"),\n  \"FI\": flag(\"FI\"),\n  \"FR\": flag(\"FR\"),\n  \"GB\": flag(\"GB\"),\n  \"GG\": flag(\"GG\"),\n  \"GR\": flag(\"GR\"),\n  \"HR\": flag(\"HR\"),\n  \"HU\": flag(\"HU\"),\n  \"IM\": flag(\"IM\"),\n  \"IE\": flag(\"IE\"),\n  \"IS\": flag(\"IS\"),\n  \"IT\": flag(\"IT\"),\n  \"JE\": flag(\"JE\"),\n  \"XK\": flag(\"XK\"), // Kosovo we feel your pain, too.\n  \"LI\": flag(\"LI\"),\n  \"LT\": flag(\"LT\"),\n  \"LU\": flag(\"LU\"),\n  \"LV\": flag(\"LV\"),\n  \"MC\": flag(\"MC\"),\n  \"MD\": flag(\"MD\"),\n  \"MK\": flag(\"MK\"),\n  \"MT\": flag(\"MT\"),\n  \"ME\": flag(\"ME\"),\n  \"NL\": flag(\"NL\"),\n  \"NO\": flag(\"NO\"),\n  \"PL\": flag(\"PL\"),\n  \"PT\": flag(\"PT\"),\n  \"RO\": flag(\"RO\"),\n  \"SM\": flag(\"SM\"),\n  \"RS\": flag(\"RS\"),\n  \"SK\": flag(\"SK\"),\n  \"SI\": flag(\"SI\"),\n  \"SE\": flag(\"SE\"),\n  \"UA\": flag(\"UA\"),\n  \"VA\": flag(\"VA\"),\n};\n\n// TODO: Elegant solution for this one?\n//const ICONS = ['AL', 'NL', 'GB'].forEach(x => x, flag(x));\n\nexport default function Node({\n  layout,\n  node,\n  width,\n  height,\n  type,\n  venue,\n  onNodeClick = noop\n}) {\n  const position = layout[node.id];\n  const transform = `translate(\n    ${padding(position.x, width, 7)},\n    ${padding(position.y, height, 30)}\n  )`;\n\n  const classes = classNames({\n    [styles.node]: true,\n    [styles[type]]: true,\n    [styles[venue]]: true,\n    [styles.susceptible]: node.state === SUSCEPTIBLE,\n    [styles.sick]: node.state === SICK,\n    [styles.recovered]: node.state === RECOVERED,\n    [styles.dead]: node.state === DEAD,\n    [styles.locked]: node.locked\n  });\n\n  return (\n    <g key={`${node.id}-Node`} id={node.id} transform={transform}>\n      {node.type === VENUE ? (\n        <text\n          className={classes}\n          onClick={onNodeClick(node.id)}\n          x={-8}\n          y={7}\n          fontSize={16}\n        >\n          {ICONS[node.venue]}\n        </text>\n      ) : node.state === 3 ? (\n        <text onClick={onNodeClick(node.id)} x={-8} y={7} fontSize={16}>\n          💀\n        </text>\n      ) : (\n        <circle\n          className={classes}\n          r={5}\n          stroke={0}\n          onClick={onNodeClick(node.id)}\n          fill={\"black\"}\n        />\n      )}\n      {false && node.type === VENUE && (\n        <text fontSize={9} x={-(node.venue.length * 3.1)} y={20} fill={\"black\"}>\n          {node.venue.toUpperCase()}\n        </text>\n      )}\n      {node.locked && (\n        <circle r={40} fill={\"none\"} stroke={\"gray\"} strokeWidth={2} />\n      )}\n    </g>\n  );\n}\n","const VENUE = 'venue';\nconst AGENT = 'agent';\n\nconst SUSCEPTIBLE = 0;\nconst SICK = 1;\nconst RECOVERED = 2;\nconst DEAD = 3;\n\nconst COLORS = ['#ECA6E1','#C28CBE','#9B729C','#76597B','#55415B','#362A3C'];\nconst FPS = 400;\n\nexport {\n  SUSCEPTIBLE, SICK, RECOVERED, DEAD,\n  VENUE, AGENT,\n  COLORS,\n  FPS,\n};\n","import React, { Component } from \"react\";\n\nimport {\n  forceSimulation,\n  forceLink,\n  forceCollide\n} from \"d3-force\";\n\nimport Node from \"./Node\";\n\nexport default class Graph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTick = this.handleTick.bind(this);\n    this.setCurrent = this.setCurrent.bind(this);\n\n    this.state = {\n      current: null,\n      layout: props.nodes.reduce(\n        (prev, acc) => (\n          (prev[acc.id] = {\n            x: 0,\n            y: 0\n          }),\n          prev\n        ),\n        {}\n      )\n    };\n  }\n\n  componentDidMount() {}\n\n  componentWillMount() {\n    this.runForceSimulation();\n\n    this.simulation.on(\"tick\", this.handleTick);\n  }\n\n  componentWillUnmount() {\n    this.simulation.on(\"tick\", null);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.tick !== nextProps.tick) {\n      this.updateForceSimulation();\n    }\n  }\n\n  updateForceSimulation() {\n    this.simulation.alpha(0.2).restart();\n    this.simulation.nodes(this.props.nodes);\n    this.simulation.force(\"link\").links(this.props.edges);\n  }\n\n  shouldComponentUpdate(props, nextProps) {\n    return props.tick !== nextProps.tick;\n  }\n\n  runForceSimulation() {\n    const { nodes, edges } = this.props;\n\n    const simulation = (this.simulation = forceSimulation(nodes)\n      .force(\n        \"link\",\n        forceLink().id(node => node.id)\n      )\n      .force(\n        \"collide\",\n        forceCollide(() => 1)\n          .iterations(1)\n          .radius(9)\n      ));\n\n    simulation\n      .force(\"link\")\n      .links(edges)\n      .distance(25);\n  }\n\n  handleTick() {\n    const { simulation } = this;\n    const { layout } = this.state;\n    let updates = {};\n\n    simulation.nodes().map(node => {\n      updates[node.id] = node;\n    });\n\n    this.setState({\n      layout: {\n        ...layout,\n        ...updates\n      }\n    });\n  }\n\n  setCurrent(nodeId) {\n    return () => {\n      this.setState({\n        current: nodeId\n      });\n    };\n  }\n\n  render() {\n    const { nodes, edges, width, height, onNodeClick } = this.props;\n    const { layout, current } = this.state;\n    return (\n      <svg\n        width={width}\n        ref={ref => (this.svgRef = ref)}\n        height={height}\n        style={{\n          shapeRendering: \"geometricPrecision\"\n        }}\n      >\n        {nodes.map((node, index) => (\n          <Node\n            key={index}\n            node={node}\n            layout={layout}\n            current={current}\n            width={width}\n            height={height}\n            onNodeClick={onNodeClick}\n            {...node}\n          />\n        ))}\n      </svg>\n    );\n  }\n}\n\nGraph.defaultProps = {\n  width: 900,\n  height: 600,\n  nodes: [],\n  edges: []\n};\n","import React from \"react\";\n\nimport styles from \"./LineChart.module.css\";\n\nfunction buildPolyLineString(points, xMultipier, yMultipier, maxXEntries) {\n  return points\n    .slice(Math.max(points.length - maxXEntries, 0))\n    .reduce((acc, current, i) => {\n      return acc.concat(`${i * xMultipier}, ${-(current * yMultipier)}`);\n    }, [])\n    .join(\" \");\n}\n\nexport default function LineChart({\n  width,\n  height,\n  xOffset = 10,\n  yOffset = 17,\n  data = [],\n  maxXEntries = 100\n}) {\n  const maxYPoint = height - 50;\n  const maxYRange = Math.max(\n    maxYPoint,\n    ...data.reduce((prev, { points }) => prev.concat(points), [])\n  );\n\n  const yMultipier = 1;\n  const xMultipier = 2.5;\n  const scaleY = maxYPoint / maxYRange;\n\n  return (\n    <>\n      <span className={styles.labelY}>population →</span>\n      <svg className={styles.lineChart} width={width} height={height}>\n        <g\n          transform={`scale(1, ${scaleY}), translate(0, ${(height - 30) /\n            scaleY})`}\n        >\n          {data.map(({ points, color }, i) => (\n            <g\n              key={`line-${i}`}\n              transform={`translate(${xOffset + 5}, ${yMultipier + yOffset})`}\n            >\n              <polyline\n                points={buildPolyLineString(\n                  points,\n                  xMultipier,\n                  yMultipier,\n                  maxXEntries\n                )}\n                stroke={color}\n                fill=\"transparent\"\n                strokeWidth={2}\n              />\n            </g>\n          ))}\n        </g>\n      </svg>\n      <span className={styles.labelX}>days since the first case →</span>\n    </>\n  );\n}\n","import React from 'react';\n\nimport styles from './SimulationSettings.module.css';\n\nexport default function SimulationSettings({\n  simulationState,\n  onSettingChange,\n  onRestartButtonClick,\n}) {\n  return (\n    <div className={ styles.container }>\n      <div className={ styles.form }>\n      <label>\n        Initial sick inhabitants<br />\n        <input\n          type={ 'range' }\n          onChange={ onSettingChange('initialSickAgents') }\n          value={ simulationState.initialSickAgents }\n          min={ 0 }\n          max={ 10 }\n        /> <span className={ styles.value }>{ simulationState.initialSickAgents }</span>\n      </label>\n      <label>\n        Inhabitants per country <br />\n        <input\n          type={ 'range' }\n          onChange={ onSettingChange('agentsPerHouse') }\n          value={ simulationState.agentsPerHouse }\n          min={ 1 }\n          max={ 10 }\n        /> <span className={ styles.value }>{ simulationState.agentsPerHouse }</span>\n      </label>\n      <label>\n        Are the borders closed? <br />\n        <input\n            type={'range'}\n            onChange={onSettingChange('closedBorders')}\n            value={simulationState.closedBorders}\n            min={0}\n            max={2}\n          /><br /> 0: closed, 1: some open<br />2: all open\n      </label>\n      <label>\n        What percentage of citizens wears masks <br />\n        <input\n          type={ 'range' }\n          onChange={ onSettingChange('maskWearPercentage') }\n          value={ simulationState.maskWearPercentage }\n          min={ 0 }\n          max={ 100 }\n        /> <span className={ styles.value }>{ simulationState.maskWearPercentage } %</span><br /><i>this one works in realtime</i>\n      </label>\n      </div>\n\n      <div className={ styles.footer }>\n        <button onClick={ onRestartButtonClick }>Restart the simulation</button>\n      </div>\n    </div>\n  );\n}\n","import {\n  SUSCEPTIBLE, SICK, RECOVERED, DEAD,\n} from '../constants';\n\nimport { randomChoice, weightedRandom } from '../utils';\n\nexport const STAY = 'stay';\nexport const BASE = 'base';\n\nconst SIR_TRANSITION_STATE = {\n  [SUSCEPTIBLE]: [\n    [1, SUSCEPTIBLE],\n  ],\n  [RECOVERED]: [\n    [1, RECOVERED],\n  ],\n  [SICK]: [\n    [0.995, SICK],\n    [0.004, RECOVERED],\n    [0.001, DEAD],\n  ],\n  [DEAD]: [\n    [1, DEAD],\n  ],\n};\n\n// TODO: This is the transition. It is inhabited by masks\nconst DISEASE_SPREAD_TRANSITION = {\n  [SUSCEPTIBLE]: [\n    [0.3, SICK],\n    [0.7, SUSCEPTIBLE],\n  ],\n  [RECOVERED]: [\n    [1, RECOVERED],\n  ],\n  [SICK]: [\n    [1, SICK],\n  ],\n  [DEAD]: [\n    [1, DEAD],\n  ],\n};\n\nexport function getNextMarkovStateForAgent(agent, transitionMap) {\n  const [agentLocation] = agent.location.split('-');\n\n  // TODO: traveliness will be implemented here\n  if (agentLocation === 'house' && Math.random() < 0.9) {\n    return STAY;\n  }\n\n  const map = transitionMap[agentLocation];\n\n  return randomChoice(map);\n}\n\nexport function applySIRModel(state, nodes, edges) {\n  for (const node of nodes) {\n    if (node.type !== 'agent') {\n      continue;\n    }\n\n    const location = nodes.find(({ id }) => node.location === id);\n    const fellows = edges\n      .filter(({ target }) => target.id === location.id)\n      .map(({ source }) => source);\n\n    fellows.forEach(\n      (fellow) => {\n        if (fellow.id === node.id) {\n          return;\n        }\n\n        if (node.state === SICK) {\n          // If the agent wears a mask we suppress the transition of the sickness.\n          // According to Davies et al., (2013) Disaster medicine and Public Health Preparedness\n          // Surgical Masks have a 97% effectiveness against 1-micron particles.\n          if (state.maskWearPercentage > 0 && DISEASE_SPREAD_TRANSITION[fellow.state][0][0] === 0.3) {\n\n            var sick_prob = 0.3 * (1 - state.maskWearPercentage/103);\n            var MASK_MODIFIED_TRANSITION = {\n              [SUSCEPTIBLE]: [\n                [sick_prob, SICK],\n                [1 - sick_prob, SUSCEPTIBLE],\n              ],\n              [RECOVERED]: [\n                [1, RECOVERED],\n              ],\n              [SICK]: [\n                [1, SICK],\n              ],\n              [DEAD]: [\n                [1, DEAD],\n              ],\n            };\n            console.log(\"susceptible ones\")\n            fellow.state = weightedRandom(MASK_MODIFIED_TRANSITION[fellow.state]);\n          } else {\n            fellow.state = weightedRandom(DISEASE_SPREAD_TRANSITION[fellow.state]);\n          }\n        }\n\n        fellow.state = weightedRandom(SIR_TRANSITION_STATE[fellow.state]);\n      }\n    )\n  }\n}\n","import { shuffle } from '../utils';\n\nexport function applyFixedNodeGrid(nodes, height = 600) {\n  shuffle(nodes);\n\n  const gridSize = 100;\n  const nodesToAlign = nodes.filter(({ type }) => type === 'venue');\n  const count = nodesToAlign.length;\n\n  fetch('https://raw.githubusercontent.com/eusim/coronavirus-simulation/master/data/country_centroids_az8.json')\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      console.log(JSON.stringify(data));\n\n      var venue = 0;\n      for (var i = 0; (i < data.features.length && venue < count); i++) {\n        if (data.features[i].properties.region_un === 'Europe'\n          && (data.features[i].properties.type === 'Country'\n          || data.features[i].properties.type === 'Sovereign country')\n          && data.features[i].properties.admin !== 'Russia') {\n          const node = nodesToAlign[venue];\n\n          node.fx = data.features[i].geometry.coordinates[0] * 14 + 300;\n          node.fy = - data.features[i].geometry.coordinates[1] * 14 + 1100;\n\n          // TODO: Kosovo, we feel your pain\n          if (data.features[i].properties.iso_a2 == -99) {\n            data.features[i].properties.iso_a2 = \"XK\";\n          }\n          node.venue = data.features[i].properties.iso_a2;\n\n          venue++;\n        }\n      }\n    });\n\n  return nodes;\n}\n","import { randomSample, distance } from '../utils';\n\nimport { AGENT, SUSCEPTIBLE, SICK, RECOVERED, DEAD } from '../constants';\n\nimport { getNextMarkovStateForAgent, STAY, BASE, applySIRModel, DISEASE_SPREAD_TRANSITION } from './markov';\nimport { applyFixedNodeGrid } from './grid';\n\nconst VENUES = [\n  {\n    name: 'house',\n    members: simulationState => simulationState.agentsPerHouse,\n    isRoot: true,\n    count: simulationState => simulationState.houses,\n  }\n];\n\nconst REGULAR_VENUE_TRANSITIONS = {\n  'house': [BASE, BASE, BASE, 'NL', BASE, BASE, BASE, BASE,\n    BASE, BASE, BASE, \"AL\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"AX\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"AD\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"AT\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"BE\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"BG\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"BA\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"BY\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"CH\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"CZ\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"DE\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"DK\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"ES\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"EE\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"FI\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"FR\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"GB\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"GG\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"GR\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"HR\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"HU\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"IM\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"IE\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"IS\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"IT\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"JE\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"XK\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"LI\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"LT\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"LU\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"LV\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"MC\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"MD\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"MK\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"MT\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"ME\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"NL\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"NO\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"PL\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"PT\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"RO\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"SM\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"RS\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"SK\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"SI\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"SE\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"UA\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"VA\", BASE, BASE, BASE]\n};\n\nconst HALF_ASSED_VENUE_TRANSITIONS = {\n  'house': [BASE, BASE, BASE, 'NL', BASE, BASE, BASE, BASE,\n    BASE, BASE, BASE, \"BE\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"DE\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"FR\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"GB\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"IT\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"PL\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"RO\", BASE, BASE, BASE,\n    BASE, BASE, BASE, \"SE\", BASE, BASE, BASE]\n};\n\nconst CLOSED_BORDER_VENUE_TRANSITIONS = {\n  'house': [BASE]\n};\n\nvar VENUE_TRANSITIONS = REGULAR_VENUE_TRANSITIONS;\n\nfunction getInitialGraph(simulationState) {\n  const nodes = [];\n  const edges = [];\n\n  if (simulationState.closedBorders == 2) {\n    VENUE_TRANSITIONS = REGULAR_VENUE_TRANSITIONS;\n  } else if (simulationState.closedBorders == 1) {\n    VENUE_TRANSITIONS = HALF_ASSED_VENUE_TRANSITIONS;\n  } else {\n\n    VENUE_TRANSITIONS = CLOSED_BORDER_VENUE_TRANSITIONS;\n  }\n\n  VENUES.forEach(({\n    name,\n    members,\n    isRoot,\n    count,\n    alignment,\n  }) => {\n    for (let i = 0, nodeIndex = 0; i < count(simulationState); i++, nodeIndex++) {\n      const venueId = `${name}-${i}`;\n      const venueIndex = nodeIndex;\n      nodes.push({\n        type: 'venue',\n        venue: name,\n        id: venueId,\n        size: 1,\n      });\n\n      if (!members) {\n        continue;\n      }\n\n      for (var j = 0; j < members(simulationState); j++, nodeIndex++) {\n        const agentId = `${name}-${i}-${j}`;\n        nodes.push({\n          type: 'agent',\n          location: venueId,\n          base: venueId,\n          id: agentId,\n          size: 1,\n          state: SUSCEPTIBLE,\n        });\n        edges.push({\n          'source': agentId,\n          'target': venueId,\n        });\n      }\n    }\n  });\n\n  const sickAgents = randomSample(\n    nodes.filter(({ type }) => type === 'agent'),\n    simulationState.initialSickAgents\n  );\n\n  for (const agent of sickAgents) {\n    agent.state = SICK;\n  }\n\n  return ({\n    nodes: applyFixedNodeGrid(nodes),\n    edges,\n  });\n}\n\nfunction nextSimulationTick(state, nodes, edges) {\n  const rootVenue = VENUES.find(({ isRoot }) => isRoot);\n\n  nodes\n    .filter(\n      ({ type }) => type === AGENT\n    )\n    .forEach(\n      (agent, i) => {\n\n        const nextMarkovState = getNextMarkovStateForAgent(agent, VENUE_TRANSITIONS);\n        const [agentLocation] = agent.location.split('-')\n\n        if (\n          agentLocation === nextMarkovState ||\n          (nextMarkovState === BASE && agent.location === agent.base) ||\n          nextMarkovState === STAY\n        ) {\n          return;\n        } else if (agent.state === DEAD) {\n          return;\n        } else if (nextMarkovState === BASE) {\n          moveAgent(\n            nodes,\n            edges,\n            agent,\n            nodes.find(({ id }) => id === agent.base)\n          );\n        } else {\n          moveAgent(\n            nodes,\n            edges,\n            agent,\n            findClosestNode(agent, nodes.filter(({ venue }) => venue === nextMarkovState))\n          );\n        };\n\n      }\n    );\n\n\n  nodes = applySIRModel(state, nodes, edges);\n\n  return {\n    nodes: nodes,\n    edges: edges,\n    state: { ...state, tick: state.tick + 1 },\n  }\n}\n\nfunction moveAgent(nodes, edges, agent, targetNode) {\n  const sourceNode = nodes.find(({ id }) => id === agent.location);\n\n  if (targetNode.locked || sourceNode.locked) {\n    return;\n  }\n\n  const newEdges = edges.map((edge) => {\n    if (edge.source.id === agent.id) {\n      edge.target = targetNode;\n    }\n  });\n\n  agent.location = targetNode.id;\n}\n\nfunction findClosestNode(source, targets) {\n  if (targets) {\n    const closest = targets.reduce(\n      (prev, current) => distance(source, current) < distance(source, prev) ? current : prev\n    );\n    return closest;\n  } else {\n    return source;\n  }\n\n}\n\nexport {\n  VENUES,\n  VENUE_TRANSITIONS,\n  HALF_ASSED_VENUE_TRANSITIONS,\n  REGULAR_VENUE_TRANSITIONS,\n  getInitialGraph,\n  nextSimulationTick\n};\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport styles from \"./App.module.css\";\nimport Graph from \"./Graph\";\nimport LineChart from \"./LineChart\";\nimport SimulationSettings from \"./SimulationSettings\";\nimport { SICK, RECOVERED, DEAD } from \"./constants\";\nimport { useInterval, randomChoice } from \"./utils\";\nimport { nextSimulationTick, getInitialGraph, setMarkovChain } from \"./simulation\";\n\nconst INITIAL_SIMULATION_STATE = {\n  tick: 0,\n  agentsPerHouse: 9,\n  houses: 48,\n  initialSickAgents: 5,\n  closedBorders: 2,\n  maskWearPercentage: 0\n};\n\n// Setup initial graph containing venues and agents\nconst INITIAL_GRAPH = getInitialGraph(INITIAL_SIMULATION_STATE);\n\nfunction App() {\n  const [simulationState, setSimulationState] = useState(\n    INITIAL_SIMULATION_STATE\n  );\n  const [nodes, setNodes] = useState(INITIAL_GRAPH.nodes);\n  const [edges, setEdges] = useState(INITIAL_GRAPH.edges);\n  const [historicalSickCount, setHistoricalSickCount] = useState([]);\n  const [historicalRecoveredCount, setHistoricalRecoveredCount] = useState([]);\n  const [historicalDeadCount, setHistoricalDeadCount] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const graphRef = useRef(null);\n\n  useInterval(() => {\n    if (loading) {\n      return;\n    }\n\n    const { nodes: _nodes, edges: _edges, state } = nextSimulationTick(\n      simulationState,\n      nodes,\n      edges\n    );\n\n    setSimulationState(state);\n\n    // Setup for graph in the bottom right\n    setHistoricalSickCount(\n      historicalSickCount.concat(\n        nodes.filter(({ state }) => state === SICK).length\n      )\n    );\n\n    setHistoricalRecoveredCount(\n      historicalRecoveredCount.concat(\n        nodes.filter(({ state }) => state === RECOVERED).length\n      )\n    );\n\n    setHistoricalDeadCount(\n      historicalDeadCount.concat(\n        nodes.filter(({ state }) => state === DEAD).length\n      )\n    );\n  }, 1000);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [loading]);\n\n\n  // Quarantine\n  const onNodeClick = (nodeId) => {\n    return () => {\n      const node = nodes.find(({ id }) => nodeId === id);\n      if (node.type !== \"venue\") {\n        return;\n      }\n      node.locked = !node.locked;\n    };\n  };\n\n  const onSettingChange = (key) => (event) => {\n    setSimulationState({ ...simulationState, [key]: event.target.value });\n  };\n\n  const onRestartButtonClick = () => {\n    const { nodes, edges } = getInitialGraph(simulationState);\n    setLoading(true);\n    setNodes(nodes);\n    setEdges(edges);\n    setHistoricalDeadCount([]);\n    setHistoricalRecoveredCount([]);\n    setHistoricalSickCount([]);\n    setSimulationState({ ...simulationState, tick: 0 });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <h3>What happens in Europe if we ... ?</h3>\n        <h2>An experiment to analyse how a virus spreads over Europe</h2>\n      </div>\n      <div className={styles.simulation}>\n        <div className={styles.samples}>\n          <span className={styles.sampleSusceptible}>Susceptible</span>\n          <span className={styles.sampleInfected}>Infected</span>\n          <span className={styles.sampleRecovered}>Recovered</span>\n          <span className={styles.sampleDead}>Deceased</span>\n          <i>Click on a country to lock it down (quarantine)</i>\n        </div>\n        {!loading && (\n          <Graph\n            width={\n              Math.round(\n                nodes.filter(({ type }) => type === \"venue\").length / 6\n              ) * 110\n            }\n            height={700}\n            tick={simulationState.tick}\n            nodes={nodes}\n            edges={edges}\n            onNodeClick={onNodeClick}\n            ref={graphRef}\n          />\n        )}\n      </div>\n      <div className={styles.section}>\n        <div className={styles.stats}>\n          <h3>Stats</h3>\n          <div className={styles.population}>\n            POPULATION: {nodes.filter(({ type }) => type === \"agent\").length}{\" \"}\n            <br />\n            <span className={styles.deceased}>Dead</span>: {nodes.filter(({ state }) => state === DEAD).length} <br />\n            \n            <span className={styles.recovered}>Recovered</span>: {\n              nodes.filter(({ state }) => state === RECOVERED).length\n            }{\" \"}\n            <br />\n            <span className={styles.sick}>Sick</span>: {nodes.filter(({ state }) => state === SICK).length} <br />\n          </div>\n          <LineChart\n            width={300}\n            height={270}\n            data={[\n              { color: \"red\", points: historicalSickCount },\n              { color: \"green\", points: historicalRecoveredCount },\n              { color: \"black\", points: historicalDeadCount },\n            ]}\n          />\n        </div>\n        <div className={styles.simulationSettings}>\n          <h3>Settings</h3>\n          <div className={styles.simulationInfo}>\n            Click on a country on the map to make it quarantined.\n          </div>\n          <SimulationSettings\n            simulationState={simulationState}\n            onSettingChange={onSettingChange}\n            onRestartButtonClick={onRestartButtonClick}\n          />\n        </div>\n\n      </div>\n      <div className={styles.pageInfo}>\n      <ins\n          className=\"adsbygoogle\"\n          style={{ display: 'block', textAlign: 'center' }}\n          data-ad-layout=\"in-article\"\n          data-ad-format=\"fluid\"\n          data-ad-client=\"ca-pub-5587173855104127\"\n          data-ad-slot=\"8487596319\"\n        ></ins>\n        <div className={styles.section}>\n          <h1>What is this?</h1>\n          <p>\n            Imagine you are ruling over the European Union and can also influence how a sickness like COVID-19 behaves in a population like the European Union. What would you do if you were chief of the EU? Would you lock it down? Would you set out laws to make people wear masks? Explore your ability to manage the EU by changing the sliders above and watch how the sickness spreads over time. 😊\n          </p>\n          <p>\n            This simulator is a direct result of the <a href=\"https://euvsvirus.org/\">EUvsVirus</a> Hackathon 2020 based on this whitepaper: <a href=\"https://devpost.com/software/political-policies-effect-on-covid-19-spread-inside-the-eu-uamhdv\">Political policies effect on COVID-19 spread inside the EU</a>.\n          </p>\n          <h1>How does it work?</h1>\n          <p>\n            This simulator models the spread of COVID-19 amongst the inhabitants of Europe. At the beginning of each simulation, all but a few inhabitants are healthy. The number of inhabitants that are sick at the start of the simulation can be set by adjusting the corresponding slider.\n          </p>\n          <p>\n            Once the simulation starts, inhabitants will begin to travel around. While visiting other countries, the healthy inhabitants might get in contact with sick inhabitants and, as a result, risk getting infected with the virus. Once back home, an infected inhabitant might also infect its countries fellow inhabitants.\n          </p>\n          <p>\n            As in the real world, once infected, an inhabitant's future can develop in two ways. The first and most bright outcome is recovery from the virus 🥳. The second, obviously unwanted outcome, is death 😢.\n          </p>\n          <p>\n            Whether an inhabitant gets sick or if an infected inhabitant recovers or dies is based on probabilistic values.\n          </p>\n          <p>\n            The probabilistic values are defined in a so-called <a href=\"https://en.wikipedia.org/wiki/Markov_chain\">Markov-chain</a>. A Markov chain is a stochastic model to describe a sequence of possible events that can occur in the future.\n          </p>\n          <p>\n            We're using a Markov graph to define a probabilistic transition. We can simply say that Markov chain is a graph of all the possible state transitions of an individual inhabitant. In our model, we have events such as getting infected, recovering from the virus, or death.\n          </p>\n          <h1>I would like to discover more:</h1>\n          <p>\n            This is an MIT-licensed open-source project, you can find the source\n            code on <a href=\"https://github.com/eusim/coronavirus-simulation\">GitHub</a>. Feel free to copy, use or modify it for your own\n            simulations.\n          </p>\n          <p>\n            Created by<br />\n            <a href=\"https://twitter.com/fthrkl\">Fatih Erikli</a><br />\n            <a href=\"https://twitter.com/michel_mke\">Michel Make</a><br />\n            <a href=\"https://twitter.com/rscircus\">Roland Siegbert</a>\n          </p>\n          <p style={{ marginBottom: \"4em\" }}>\n            Stay safe! <br />{\" \"}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"header\":\"App_header__3ZZ1n\",\"simulationContainer\":\"App_simulationContainer__23iFm\",\"simulation\":\"App_simulation__1Y9Gr\",\"section\":\"App_section__1OL6S\",\"recovered\":\"App_recovered__OUIO_\",\"sick\":\"App_sick__2yy5f\",\"deceased\":\"App_deceased__2LBtz\",\"simulationSettings\":\"App_simulationSettings__txA-R\",\"stats\":\"App_stats__2fMs7\",\"population\":\"App_population__3MVPW\",\"simulationInfo\":\"App_simulationInfo__1KRFk\",\"pageInfo\":\"App_pageInfo__2E9cf\",\"samples\":\"App_samples__2e7V-\",\"sampleSusceptible\":\"App_sampleSusceptible__2olEO\",\"sampleInfected\":\"App_sampleInfected__1l1Pi\",\"sampleRecovered\":\"App_sampleRecovered__33NzV\",\"sampleDead\":\"App_sampleDead__1RLgZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Graph_node__2LUmU\",\"venue\":\"Graph_venue__1yeeL\",\"hospital\":\"Graph_hospital__2-HM5\",\"teatr\":\"Graph_teatr__3zcOH\",\"station\":\"Graph_station__3oWAU\",\"supermarket\":\"Graph_supermarket__x5o1m\",\"susceptible\":\"Graph_susceptible__2UC5Q\",\"dead\":\"Graph_dead__aGtk-\",\"sick\":\"Graph_sick__2ig0f\",\"recovered\":\"Graph_recovered__3crc2\",\"lockedSymbol\":\"Graph_lockedSymbol__1OEeZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SimulationSettings_container__vY4rL\",\"form\":\"SimulationSettings_form__E6YUW\",\"value\":\"SimulationSettings_value__1sPd7\",\"text\":\"SimulationSettings_text__1TWBo\",\"footer\":\"SimulationSettings_footer__1GRqa\"};"],"sourceRoot":""}